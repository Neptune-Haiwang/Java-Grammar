public class TestArray {
   public static void main(String[] args) {
      // 数组大小
      int size = 10;
      
      // 定义数组
      double[] myList = new double[size];
      myList[0] = 5.6;
      myList[1] = 4.5;
      myList[2] = 3.3;
      myList[3] = 13.2;
      myList[4] = 4.0;
      myList[5] = 34.33;
      myList[6] = 34.0;
      myList[7] = 45.45;
      myList[8] = 99.993;
      myList[9] = 11123;
      
      // 计算所有元素的总和
      double total = 0;
      
      for (int i = 0; i < size; i++) {
         total += myList[i];
      }
      System.out.println("总和为： " + total);
      
      
      
      double[] myList1 = {1.9, 2.9, 3.4, 3.5};
 
      // 打印所有数组元素
      for (int i = 0; i < myList1.length; i++) {
         System.out.println(myLis1t[i] + " ");
      }
      
      // 打印所有数组元素，用for-each循环
      for (double element: myList) {
         System.out.println(element);
      }
      
      // 计算所有元素的总和
      double total = 0;
      for (int i = 0; i < myList1.length; i++) {
         total += myList1[i];
      }
      System.out.println("Total is " + total);
      
      // 查找最大元素
      double max = myList1[0];
      for (int i = 1; i < myList1.length; i++) {
         if (myList1[i] > max) max = myList1[i];
      }
      System.out.println("Max is " + max);
   } 
   
   //打印 int 数组中元素的方法
   public static void printArray(int[] array) {
      for (int i = 0; i < array.length; i++) {
      System.out.print(array[i] + " ");
   }
   
   //数组作为函数的返回值
   public static int[] reverse(int[] list) {
      int[] result = new int[list.length];
 
      for (int i = 0, j = result.length - 1; i < list.length; i++, j--) {
       result[j] = list[i];
      }
      return result;
    }
    
    //多维数组
    String str[][] = new String[3][4];
    
    String s[][] = new String[2][];
    s[0] = new String[2];
    s[1] = new String[3];
    s[0][0] = new String("Good");
    s[0][1] = new String("Luck");
    s[1][0] = new String("to");
    s[1][1] = new String("you");
    s[1][2] = new String("!");
   
   
   
}
